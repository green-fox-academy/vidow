#include <stdio.h>
#include <stdint.h>
#include <math.h>
#include <stdlib.h>

//Day 1 - C Basics

//Exercise 01.c

/*
    int main() {
	int a = 3+10;
	// make it bigger by 10
	printf("%d\n", a);
	return 0;
}
*/


//Exercise 02.c

/*
    int main() {
	int b = 100 - 7;
	// make it smaller by 7
	printf("%d\n", b);
	return 0;
}
*/



//Exercise 03.c

/*
int main() {
	int c = 44 * 2;
	// please double c's value
	printf("%d\n", c);
	return 0;
}
{
    if(c = 88)
{

	printf("Yaaay");
}
	return 0;
}
*/



//Exercise 03.c/1 / why does not work?

/*int main() {
	int c = 44 * 2;
	// please double c's value
	printf("%d\n", c);
	return 0;
}
    if(c = 88){
        printf("Yaaay");
	return 0;
}
*/


//Exercise 04.c

/*
int main() {
	int d = 125 / 5;
	// please divide by 5 d's value
	printf("%d\n", d);
	return 0;
}
*/



//Exercise 05.c

/*
int main() {
	int e = pow(8,3);
	//or int e = 8*8*8;
	// please cube of e's value
	printf("%d\n", e);
	return 0;
}
*/



//Exercise 06.c

/*
int main() {
	int f = sqrt(16);
	// please square root f's value
	printf("%d\n", f);
	return 0;
}
*/

//Exercise 07.c

/*
int main() {
	int g1 = 123;
	int g2 = 345;
	// tell if g1 is bigger than g2
	if (g1 > g2){
        printf("Yes!");
	}
	else
        printf("Nooooooo :(");
	return 0;
}
*/

//Exercise 08.c

/*
int main() {
	int h1 = 350;
	int h2 = 200;
	// tell if the double of h2 is bigger than h1
	if (h2*2 > h1){
        printf("Happy Squirel");
	}
	else
        printf("Sad Squirel");
    return 0;
}
*/

//Exercise 09.c

/*
int main() {
	int i = 53625;
	// tell if it has 11 as a divisor
	if (i % 11){
        printf("%d\n", i);
}
    else
        printf("Oh sh!t!");
	return 0;
}
*/

//Exercise 10.c

/*
int main() {
	int j1 = 10;
	int j2 = 3;
	// tell if j1 is higher than j2 squared and smaller than j2 cubed
	if (j1 > pow(j2,2) && j1 < pow(j2,3)){
        printf("Victory!");
	}
	else
        printf("Sorry it is not true go back to school.");
	return 0;
}
*/

//Exercise 11.c

/*int main() {
	int k = 1521;
	// tell if k is dividable by 3 or 5
	if ((k % 3 == 0) || (k % 5 == 0)){
        printf("Yes 1521 dividable by 3 or 5");
}
    else
        printf("Sorry it cannot be");

	return 0;
}
*/

//Exercise 12.c

/*int main() {
    uint8_t a = 60;
    uint8_t b = 0b00111100;
    uint8_t c = 0x3C;
    uint8_t d = 0x3c;

    printf("------------------\n", d);
    printf("%d\n", a);
    printf("%d\n", b);
    printf("%d\n", c);
    printf("%d\n", d);
    printf("------------------\n", d);

    // Try with %x

    // Multiply a by 2

    // Shift left b by 1

    // Check their values

    a*=2;
    b<<=1;
    printf("%x\n", a);
    printf("%x\n", b);
    printf("------------------\n", d);

    return 0;
}
*/

//Exercise 13.c

/*
int main() {
    uint8_t x = 0b11001100;
    uint8_t y = 0b01010101;
	uint8_t z = x & y;

        // or z = x & y;
        printf("%d\n", z);

        z = x | y;
        printf("%d\n", z);

	// Be z equal to the bitwise and of x and y

	// Check the result with printf

	// Be z equal to the bitwise or of x and y

	// Check the result with printf


    return 0;
}
*/

//Exercise 14.c


/*int main() {
    uint8_t number = 254;
	uint8_t result;

	result = number + 23;
	// Check the result with printf
	printf("%d\n", result);

 	// What happened?!
	// Try again with different datatype
	// If I change the data types, the value also change. The reason is that
	// the value is different in decimal or in hexadecimal for example
	uint16_t result_16 = number + 23;
	printf("%d\n", result_16);
	// Check the result with printf

	// What happened and why?
    // Since we used uint8_t with 16 bits and in this case the range is 0 < 255,
    // we could get the real value.
	//----------------------------------------
	int8_t number_negative = number;
	printf("%d\n", number_negative);
	// Check the result with printf

	// What happened and why?
	// Since we used int8_t instead of uint8_t, we fell into a smaller range
	// which is -128 < 127. The result was -2 because the value of the bits
	// are different.
    return 0;
}
/*

//Exercise 15.c

/*int main() {
	uint8_t u = 123;
	// print 'Hooray!' if the number is bigger than 100
	if (u > 100){
	printf("Hooray");
}
	else
    printf("Hurray not");
	return 0;
}
*/

//Exercise 16.c

/*int main() {
	uint16_t v = 426;
	// print 'Yeah!' if dividable by 4 but print 'End of program' after regardless
	if (v % 4 == 0){
        printf("Yeah");
}
    else
        printf("End of program");
    //printf("Yeah\n",((v % == 0)) )
	return 0;
}
*/

//Exercise 17.c

/*int main() {
	int w = 24;
	int out = 0;
	// if w is even increment out by one
	if (w%2 == 0){
        ++out;
    }
    printf("%d\n", out);
	return 0;
}
*/

//Exercise 18.c

/*int main() {
    //*char s=0;  this is needed later to count bits
    //int a = sizeof (s);

    //return 0;
 //}

	uint16_t number = 254;
	// if number can't be represented with 8bits
	// print 'longer than 8bits' otherwise print 'ok'
	if (number < 255){
        printf("'ok'");
    }
        else
        printf("'longer than 8bits'");

return 0;
}
*/

//Exercise 19.c

/*
int main() {
	int a = 654;
	uint64_t b = 654987312;

	// Tell if the reminder of b devided by a is 3
	if ((b % a) == 3){
        printf("Veeeery goooood!");
	}
        else
        printf("Not so good :(");

	return 0;
}
*/


//Exercise 20.c

/*
int main() {
	uint8_t z = 21;
	// if z is between 10 and 20 print 'Sweet!'
	if (10 < z > 20){
        printf("'Sweet!'");
	}
	// if less than 10 print 'More!',
	if (z < 10){
        printf("'More'");
	}
	// if more than 20 print 'Less!'
	if (z > 20){
        printf("'Less!'");
	}
	return 0;
}
*/

//Exercise 21.c

/*
int main() {
	uint8_t ab = 123;
	uint8_t credits = 100;
	uint8_t is_bonus = 0;	// This means "false"
	// if credits are at least 50,
	// and is_bonus is false decrement ab by 2
    if ((credits >= 50) && (is_bonus == 0)){
        ab = ab - 2;
	}
	printf("%d\n", ab);

	// if credits are smaller than 50,
	// and is_bonus is false decrement ab by 1
    if ((credits < 50) && (is_bonus == 0)){
        ab= ab - 1;
    }
	printf("%d\n", ab);

	// if is_bonus is true ab should remain the same
	if (is_bonus !=0){
        ab;
    }
    printf("%d\n", ab);

	return 0;
}
*/

//Exercise 22.c

/*
int main() {

	uint8_t ac = 8;
	uint8_t time = 120;
	uint8_t out;
	// if ac is dividable by 4

	// and time is not more than 200
	if ((ac % 4 == 0) && (time <= 200)){
        out = 4;
        printf("%d\n", out);
        }
        else
        printf("1\n");

    if (time > 200){
        out = 2;
        printf("%d\n", out);
        }
        else
        printf("1\n");
	// set out to 0b100

	// if time is more than 200
	// set out to 0b010
	// otherwise set out to 0b001
	return 0;
}
*/

//Exercise 23.c

/* Write a program that has two int variables girls_number, and boys_number
The first number represents the number of girls that comes to a party, the
second the boys.
It should print "The party is excellent!" if the the number of girls and
boys are equal and there are more people coming than 20
It should print "Quite cool party!"
if there are more than 20 people coming but the girl - boy ratio is not 1-1
It should print: "Average party..."
if there are less people coming than 20
It should print: "Sausage party"
if no girls are coming, regardless the count of the people
Run your program at least 3-4 times, change the variables to see the different outputs
*/

                    // THE loop practice

                    /*int main ()
                    {

                        int day = 1;
                        float amount = .01;

                        while(day <=31){
                            printf("Day:%d \t Amount:HUF%.2f \n", day, amount);
                            amount *= 2;
                            day++;
                        }

                        return 0;
                     }
                     */

                     
                     
                     
// Day 3 - Switch

int main()
{

    char letter = 'q';

    switch (letter)
    {
    case 'a':
    }
    


}
